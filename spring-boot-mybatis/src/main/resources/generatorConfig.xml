<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!-- 本地数据库驱动程序jar包的全路径  使用时改称自己的本地路径-->
    <properties resource="application.yml"/>
    <!--<classPathEntry location="D:/Maven/m3/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar"/>-->
    <context id="mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖 -->
        <property name="autoDelimitKeywords" value="true" />
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8" />
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!--添加自定义的继承接口-->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="cn.javastack.utils.MyMapper"/>
            <property name="caseSensitive" value="true" />
            <property name="forceAnnotation" value="true" />
        </plugin>

        <!--suppressAllComments 设置为true 则不再生成注释-->
        <commentGenerator>
            <property name="suppressDate" value="true" />   <!-- 是否生成注释代时间戳 -->
            <property name="suppressAllComments" value="true" />  <!-- 是否取消注释 -->
        </commentGenerator>

        <!-- 数据库连接配置 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/javastack"
                        userId="root"
                        password="1234@wu" />
        <!--<jdbcConnection driverClass="${spring.datasource.druid.driver-class-name}"
                        connectionURL="${spring.datasource.druid.url}"
                        userId="${spring.datasource.druid.username}"
                        password="${spring.datasource.druid.password}" />-->

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 对于生成的实体类所在包 -->
        <javaModelGenerator targetPackage="cn.javastack.entity" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 对于生成的mapperxml文件所在目录 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources"/>

        <!-- 对于生成的mapper类所在目录 -->
        <javaClientGenerator targetPackage="cn.javastack.mapper" targetProject="src/main/java" type="XMLMAPPER"/>

        <!-- table指定每个生成表的生成策略  表名 和 model实体类名-->
        <table tableName="t_user" domainObjectName="User" enableSelectByExample="true"
               enableDeleteByExample="true" enableCountByExample="true"
               enableUpdateByExample="true" selectByExampleQueryId="true">
            <property name="ignoreQualifiersAtRuntime" value="false"/>
            <property name="useActualColumnNames" value="false"/>
        </table>
    </context>
</generatorConfiguration>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC
        "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <properties resource="application.yml"/>
    <!-- 本地数据库驱动程序jar包的全路径  使用时改称自己的本地路径-->
    <!--<classPathEntry location="D:/Maven/m3/repository/mysql/mysql-connector-java/5.1.46/mysql-connector-java-5.1.46.jar"/>-->

    <!--
      context:生成一组对象的环境
      id:必选，上下文id，用于在生成错误时提示
      defaultModelType:指定生成对象的样式
          1，conditional：类似hierarchical；
          2，flat：所有内容（主键，blob）等全部生成在一个对象中；
          3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)
      targetRuntime:
          1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；
          2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；
      introspectedColumnImpl：类全限定名，用于扩展MBG
    -->
    <context id="mysql" targetRuntime="MyBatis3Simple" defaultModelType="flat">
        <!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；
         一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖
        -->
        <property name="autoDelimitKeywords" value="false"/>
        <!-- 生成的Java文件的编码 -->
        <property name="javaFileEncoding" value="UTF-8" />
        <!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； -->
        <property name="beginningDelimiter" value="`"/>
        <property name="endingDelimiter" value="`"/>

        <!--添加自定义的继承接口-->
        <plugin type="tk.mybatis.mapper.generator.MapperPlugin">
            <property name="mappers" value="cn.tk.MyMapper"/>
            <!--caseSensitive默认false，当数据库表名区分大小写时，可以将该属性设置为true-->
            <property name="caseSensitive" value="false"/>
        </plugin>
        <commentGenerator>
            <!-- 是否取消自动生成的注释 -->
            <property name="suppressAllComments" value="false" />
            <!-- 是否生成注释代时间戳 -->
            <property name="suppressDate" value="true" />
        </commentGenerator>

        <!-- 数据库连接配置 -->
        <jdbcConnection driverClass="com.mysql.jdbc.Driver"
                        connectionURL="jdbc:mysql://localhost:3306/javastack"
                        userId="root"
                        password="1234@wu" />

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="false"/>
        </javaTypeResolver>

        <!-- 对于生成的实体类所在包 -->
        <javaModelGenerator targetPackage="cn.javastack.entity" targetProject="src/main/java">
            <property name="enableSubPackages" value="false"/>
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 对于生成的mapperxml文件所在目录 -->
        <sqlMapGenerator targetPackage="mapper" targetProject="src/main/resources"/>

        <!-- 对于生成的mapper类所在目录 -->
        <javaClientGenerator targetPackage="cn.javastack.mapper" targetProject="src/main/java" type="XMLMAPPER"/>

        <!-- table指定每个生成表的生成策略，表名和model实体类名，% 代表所有表-->
        <table tableName="sys_log" domainObjectName="SysLog">
            <property name="ignoreQualifiersAtRuntime" value="false"/>
            <property name="useActualColumnNames" value="false"/>
            <property name="javaTargetPackage"  value="cn.javastack.entity" />
        </table>
    </context>
</generatorConfiguration>